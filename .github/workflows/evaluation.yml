name: Run an evaluation on the new model

on: issue_comment 

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  BRODAMAN_COMMENT: "/brodaman"

jobs:
  see-comment:
    # this filters for only comments made on a pull request
    if: (github.event.issue.pull_request != null)
    runs-on: windows-latest
    steps:
      - name: see payload # this step is for debugging purposes only, so you can see the payload.
        run: echo "PAYLOAD:\n${PAYLOAD}\n"
        env:
          PAYLOAD: ${{ toJSON(github.event) }}

      - name: Get repo contents
        uses: actions/checkout@v4

      - name: filter for brodaman comment
        id: filter
        if: contains(github.event.comment.body, env.BRODAMAN_COMMENT)
        run: echo "brodaman comment detected"

      - name: Parse value from the command
        if: steps.filter.outcome == 'success'
        id: get-magic-value
        shell: python
        run: |
          import re, os
          comment = os.getenv('PR_COMMENT', '')
          match = re.search('${{ env.BRODAMAN_COMMENT }}[\s+](\S+)', comment)
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            if match:
              print(f'VAL_FOUND=true', file=f)
              print(f'MAGIC_VAL={match.group(1)}', file=f)
            else:
              print(f'VAL_FOUND=false', file=f)
        env:
          PR_COMMENT: ${{ github.event.comment.body }}

      - name: print value of command
        if: steps.get-magic-value.outcome == 'success' && steps.get-magic-value.outputs.VAL_FOUND == 'true'
        run: echo "BRODAMAN_FINETUNE_MODEL_SUFFIX = ${{ steps.get-magic-value.outputs.MAGIC_VAL }}"

      - name: Generate the evaluation report
        if: steps.get-magic-value.outputs.VAL_FOUND == 'true'
        id: new-model-evaluation-report
        shell: python
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python src/eval.py
      
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              print(f'Run complete.', file=f)
              print(f'WANDB_LINK={os.environ['WANDB_LINK']}', file=f)
      
      - name: Make a comment with the ghapi
        uses: actions/github-script@v6
        if: steps.get-magic-value.outcome == 'success' 
        with:
          script: |
              var msg = `ðŸ‘‹ Hi, this is ðŸ…±ðŸ…»ðŸ…°ðŸ†€. An evaluation of the new model for Broda-man is available in this [report](${process.env.WANDB_LINK})`
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: msg
              })
        env:
          WANDB_LINK: "${{ steps.new-model-evaluation-report.outputs.WANDB_LINK }}"
      
        
