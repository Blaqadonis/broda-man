name: Evaluate the new Broda-man model
  
on:
  issue_comment: 
  
permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  BRODAMAN_COMMENT: "/brodaman"

jobs:
  evaluate-model:
    if: github.event.issue.pull_request != null
    runs-on: windows-latest
    steps:
      - name: See payload
        run: echo "PAYLOAD:\n${PAYLOAD}\n"
        env:
          PAYLOAD: ${{ toJSON(github.event) }}

      - name: Get repo contents
        uses: actions/checkout@v4

      - name: Filter for Broda-man comment
        id: filter
        if: contains(github.event.comment.body, env.BRODAMAN_COMMENT)
        run: echo "Broda-man comment detected"

      - name: Parse value from the command
        if: steps.filter.outcome == 'success'
        id: get-magic-value
        shell: python
        run: |
          import re, os
          comment = os.getenv('PR_COMMENT', '')
          match = re.search('${{ env.BRODAMAN_COMMENT }}[\s+](\S+)', comment)
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            if match:
              print(f'VAL_FOUND=true', file=f)
              print(f'MAGIC_VAL={match.group(1)}', file=f)
            else:
              print(f'VAL_FOUND=false', file=f)
        env:
          PR_COMMENT: ${{ github.event.comment.body }}

      - name: Print value of command
        if: steps.get-magic-value.outcome == 'success' && steps.get-magic-value.outputs.VAL_FOUND == 'true'
        run: echo "BRODAMAN_FINETUNE_MODEL_SUFFIX = ${{ steps.get-magic-value.outputs.MAGIC_VAL }}"

      - name: Install dependencies
        id: installations-and-evaluation
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python src/eval.py
        env:
          BRODAMAN_FINETUNE_MODEL_SUFFIX: "${{ steps.get-magic-value.outputs.MAGIC_VAL }}"
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Extract WandB run URL
        if: steps.installations-and-evaluation.outcome == 'success'
        id: extract-wandb-url
        run: |
            python -c "import os, re; log_file_path = os.path.join(os.getenv('GITHUB_WORKSPACE'), '.wandb', 'log-latest.log'); \
            with open(log_file_path, 'r') as log_file: log_content = log_file.read(); \
            match = re.search(r'View run .* at: \Khttps://wandb.ai/[^\s]*', log_content); \
            WANDB_URL = match.group() if match else None; \
            print(f'WANDB_URL={WANDB_URL}')"

            
      - name: Make a comment with the ghapi
        uses: actions/github-script@v6
        if: steps.get-magic-value.outcome == 'success'
        with:
          script: |
            var msg = `ðŸ‘‹ Hi, this is ðŸ…±ðŸ…»ðŸ…°ðŸ†€. An evaluation of the new model for Broda-man is available in this [report](${WANDB_URL})`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            })
        env:
          WANDB_URL: "${{ steps.extract-wandb-url.outputs.WANDB_URL }}"
