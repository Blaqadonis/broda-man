name: Listening For a PR Comment for Broda-man

on:
  issue_comment:
    types:
      - created

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  new-model-evaluation:
    if: (github.event.issue.pull_request != null) && contains(github.event.comment.body, 'brodaman/ft:')
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.0

      - name: Install Dependencies
        run: |
          pip install ghapi
          pip install openai
          pip install wandb
          pip install nltk

      - name: Parse Model ID from Comment
        id: parse-model-id
        run: |
          comment=$BRODAMAN_COMMENT
          start=$(( ${#comment} - ${#comment%%*brodaman/ft:} - 12 ))
          end=$(( ${#comment} - ${#comment%%:*} ))
          if (( start >= 12 && end > start )); then
            modelId=${comment:start:end - start}
            echo "VAL_FOUND=true" >> $GITHUB_ENV
            echo "BRODAMAN_FINETUNE_MODEL_ID=$modelId" >> $GITHUB_ENV
          else
            echo "VAL_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Generate the evaluation report
        if: steps.parse-model-id.outputs.VAL_FOUND == 'true'
        id: new-model-evaluation-report
        run: |
          echo "Model ID is $BRODAMAN_FINETUNE_MODEL_ID"
          python src/eval.py
          WANDB_LINK=$(wandb run get_url)
          echo "WANDB_LINK=$WANDB_LINK" >> $GITHUB_ENV

      - name: Make Comment on GitHub
        uses: actions/github-script@v6
        if: steps.new-model-evaluation-report.outcome == 'success'
        with:
          script: |
            var msg = `An evaluation of the new model for Broda-man is available [in this report](${process.env.WANDB_LINK})`
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: msg
              });

        env:
          BRODAMAN_FINETUNE_MODEL_ID: "${{ steps.parse-model-id.outputs.BRODAMAN_FINETUNE_MODEL_ID }}"
          WANDB_API_KEY: "${{ secrets.WANDB_API_KEY }}"
          OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
          WANDB_LINK: "${{ steps.new-model-evaluation-report.outputs.WANDB_LINK }}"
          BRODAMAN_COMMENT: "${{ github.event.comment.body }}"
