name: Listening For a PR Comment for Broda-man

on:
  issue_comment:
    types:
      - created

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  new-model-evaluation:
    if: (github.event.issue.pull_request != null) && contains(github.event.comment.body, '/brodaman')
    runs-on: windows-latest
    steps:
      - name: Copy Repository Contents
        uses: actions/checkout@main

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.0'

      - name: see payload # this step is for debugging purposes only, so you can see the payload.
        run: echo "PAYLOAD:\n${PAYLOAD}\n"
        env:
          PAYLOAD: ${{ toJSON(github.event) }}

      - name: Parse Model ID from Comment
        id: parse-model-id
        shell: python
        run: |
          import re
          import os

          comment = os.getenv('BRODAMAN_COMMENT', '')
          match = re.search(r'/brodaman[\s+](\S+)', comment)

          if match:
            echo "::set-env name=VAL_FOUND::true"
            echo "::set-env name=BRODAMAN_FINETUNE_MODEL_SUFFIX::${match.group(1)}"
            echo "::debug::Model suffix parsed successfully"
          else:
            echo "::set-env name=VAL_FOUND::false"
            echo "::debug::Model suffix not found"

      - name: Generate the evaluation report
        if: steps.parse-model-id.outputs.VAL_FOUND == 'true'
        id: new-model-evaluation-report
        run: |
          python src/eval.py
        env:
          BRODAMAN_FINETUNE_MODEL_SUFFIX: ${{ steps.parse-model-id.outputs.BRODAMAN_FINETUNE_MODEL_SUFFIX }}

      - name: Make Comment on GitHub
        uses: actions/github-script@v6
        if: steps.new-model-evaluation-report.outcome == 'success'
        with:
          script: |
            var msg = `An evaluation of the new model for Broda-man is available [in this report](${process.env.WANDB_LINK})`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            });
