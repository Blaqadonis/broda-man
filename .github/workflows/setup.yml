name: Listening For a PR Comment for Broda-man

on:
  issue_comment:
    types:
      - created

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  new-model-evaluation:
    if: (github.event.issue.pull_request != null) && contains(github.event.comment.body, 'brodaman/')
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.0

      - name: Install Dependencies
        run: |
          pip install ghapi
          pip install openai
          pip install wandb
          pip install nltk

      - name: Parse Model ID from Comment
        id: parse-model-id
        run: |
          import re, os
          comment = os.getenv('BRODAMAN_COMMENT', '')
          match = re.search(r'brodaman/(\S+)', comment)

          if match.group(0) == comment:
            print('VAL_FOUND=True')
            print(f'BRODAMAN_FINETUNE_MODEL_SUFFIX={match.group(1)}')
          else:
            print('VAL_FOUND=False')

          with open(os.environ['GITHUB_ENV'], 'a') as f:
            f.write(f'BRODAMAN_FINETUNE_MODEL_SUFFIX={match.group(1)}\n')

      - name: Generate the evaluation report
        if: steps.parse-model-id.outputs.VAL_FOUND == 'True'
        id: new-model-evaluation-report
        run: |
          python src/eval.py
          echo "WANDB_LINK=$(wandb run get_url)" >> $GITHUB_ENV

      - name: Make Comment on GitHub
        uses: actions/github-script@v6
        if: steps.new-model-evaluation-report.outcome == 'success'
        with:
          script: |
            var msg = `An evaluation of the new model for Broda-man is available [in this report](${process.env.WANDB_LINK})`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            });
