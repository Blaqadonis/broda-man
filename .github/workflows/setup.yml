name: Listening For a PR Comment for Broda-man

on: issue_comment

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  MAGIC_COMMENT: "/brodaman"

jobs:
  new-model-evaluation:
    if: github.event.issue.pull_request != null
    runs-on: windows-latest
    steps:
      - name: Filter for magic comment
        id: filter
        if: contains(github.event.comment.body, env.MAGIC_COMMENT)
        run: echo "Magic comment detected"

      - name: Parse value from the magic command
        if: steps.filter.outcome == 'success'
        id: get-magic-value
        shell: python
        run: |
          import re, os
          comment = os.getenv('BRODAMAN_COMMENT', '')
          match = re.search(r'{{ env.MAGIC_COMMENT }}\s+(\S+)', comment)
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            if match:
              print(f'VAL_FOUND=true', file=f)
              print(f'MAGIC_VAL={match.group(1)}', file=f)
            else:
              print(f'VAL_FOUND=false', file=f)
        env:
          BRODAMAN_COMMENT: ${{ github.event.comment.body }}

      - name: Run assignment_report.py with specified run name
        if: steps.get-magic-value.outcome == 'success' && steps.get-magic-value.outputs.VAL_FOUND == 'true'
        run: python assignment_report.py ${{ steps.get-magic-value.outputs.MAGIC_VAL }}

      - name: Comment with Report URL
        if: success()
        run: |
          var fs = require('fs');
          var reportUrl = fs.readFileSync('report_url.txt', 'utf-8').trim();
          var msg = "You can find the comparison between the baseline run and this run [here](" + reportUrl + ")";
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: msg
          })
