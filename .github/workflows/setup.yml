name: Listening For a PR Comment for Broda-man

on:
  issue_comment:
    types:
      - created

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  MAGIC_COMMENT: "/brodaman"

jobs:
  new-model-evaluation:
    if: github.event.issue.pull_request != null
    runs-on: windows-latest
    steps:
      - name: Filter for magic comment
        id: filter
        if: contains(github.event.comment.body, env.MAGIC_COMMENT)
        run: echo "Magic comment detected"

      - name: Parse value from the magic command
        id: get-magic-value
        shell: python
        run: |
          import re
          import os

          comment = os.getenv('BRODAMAN_COMMENT', '')
          match = re.search(fr'{re.escape(env.MAGIC_COMMENT)}\s+(\S+)', comment)

          if match:
            print(f'VAL_FOUND=true')
            print(f'MAGIC_VAL={match.group(1)}')
            with open(os.environ['GITHUB_ENV'], 'a') as f:
              f.write(f'VAL_FOUND=true\n')
              f.write(f'MAGIC_VAL={match.group(1)}\n')
          else:
            print(f'VAL_FOUND=false')

        env:
          BRODAMAN_COMMENT: "${{ github.event.comment.body }}"

      - name: Run the evaluation script
        if: steps.get-magic-value.outcome == 'success' && steps.get-magic-value.outputs.VAL_FOUND == 'true'
        run: python src/eval.py ${{ steps.get-magic-value.outputs.MAGIC_VAL }}

        
      - name: Comment with the evaluation link
        if: success()
        run: |
          WANDB_LINK=$(wandb run get_url)
          echo "WANDB_LINK=${WANDB_LINK}" >> $GITHUB_ENV

          msg="An evaluation of the new model for Broda-man is available [in this link](${WANDB_LINK})"
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: msg
          })
