name: Listening For a PR Comment for Broda-man

on:
  issue_comment:
    types:
      - created

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  evaluate-the-new-model:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.0

      - name: Install Dependencies
        run: |
          pip install gradio
          pip install openai
          pip install wandb
          pip install nltk

      - name: Parse Model ID from Comment
        id: parse-model-id
        run: |
          $comment_body = "${{ github.event.comment.body }}"
          $model_id_regex = "/broda-man ft:gpt-3\.5-turbo-0613:personal:broda-man:\S+/"
          if ($comment_body -match $model_id_regex) {
            $model_id = $matches[0] -replace '/broda-man ', ''  # Remove the prefix
            echo "MODEL_ID=${model_id}" >> $GITHUB_ENV
          }

      - name: Run the evaluation script
        run: |
          echo "Model ID is $MODEL_ID"
          python src/eval.py

          # Export WandB variables from environment
          echo "WANDB_ENTITY=${{ env.WANDB_ENTITY }}" >> $GITHUB_ENV
          echo "WANDB_PROJECT=${{ env.WANDB_PROJECT }}" >> $GITHUB_ENV
          echo "WANDB_API_KEY=${{ secrets.WANDB_API_KEY }}" >> $GITHUB_ENV

          # Log the WandB link to the environment variable
          echo "WANDB_LINK=$(wandb run get_url)" >> $GITHUB_ENV

      - name: Make Comment on GitHub
        uses: actions/github-script@v6
        with:
          script: |
            $gh_comment = "WandB report for the new Broda-man model evaluation: [WandB Report](${env:WANDB_LINK})"
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: $gh_comment
            })
