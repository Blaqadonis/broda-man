name: Broda-man CI/CD

on:
  push:
  issue_comment:
    types:
      - created

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  ci-cd-job:
    runs-on: windows

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Generate and Train Broda-man
        run: python src/generate_and_train_broda_man.py

      - name: Check Job Status
        id: job-status
        run: |
          status=$(python src/job_status.py)
          echo "::set-output name=status::$status"

      - name: Continue with Scripts
        if: steps.job-status.outputs.status == 'succeeded'
        run: |
          echo "Job succeeded! Model ID is $MODEL_ID"
          export BRODAMAN_FINETUNE_MODEL_ID=$MODEL_ID
          export BRODAMAN_FINETUNE_JOB_ID=$JOB_ID
          python src/gen_eval_dataset.py
          python src/evaluate_broda_man_smoothing_function.py
          python src/gradio_web_service_interface.py

      - name: Make Comment on GitHub
        if: steps.job-status.outputs.status == 'succeeded'
        uses: actions/github-script@v6
        with:
          script: |
            var msg = `Broda-man is ready. You can interact with the service [here](https://http://localhost:7860?model_id=${process.env.BRODAMAN_FINETUNE_MODEL_ID})`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            })
